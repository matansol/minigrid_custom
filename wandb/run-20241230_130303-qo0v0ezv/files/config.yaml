_current_progress_remaining:
    value: 0.0005760000000000209
_custom_logger:
    value: "False"
_episode_num:
    value: 0
_last_episode_starts:
    value: '[ True]'
_last_obs:
    value: |-
        OrderedDict([('image', array([[[[0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0],
                 [2, 2, 2, 2, 2, 2, 2],
                 [2, 1, 9, 1, 1, 1, 1],
                 [2, 1, 6, 6, 1, 1, 1],
                 [2, 1, 1, 1, 1, 1, 1],
                 [2, 1, 1, 1, 9, 1, 6]],

                [[0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0],
                 [5, 5, 5, 5, 5, 5, 5],
                 [5, 0, 0, 0, 0, 0, 0],
                 [5, 0, 2, 0, 0, 0, 0],
                 [5, 0, 0, 0, 0, 0, 0],
                 [5, 0, 0, 0, 0, 0, 0]],

                [[0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0]]]], dtype=uint8))])
_last_original_obs:
    value: None
_logger:
    value: <stable_baselines3.common.logger.Logger object at 0x0000020A0A245E40>
_n_updates:
    value: 9760
_num_timesteps_at_start:
    value: 0
_stats_window_size:
    value: 100
_total_timesteps:
    value: 1e+06
_vec_normalize_env:
    value: None
_wandb:
    value:
        cli_version: 0.19.1
        m: []
        python_version: 3.10.12
        t:
            "1":
                - 1
                - 55
            "2":
                - 1
                - 55
            "3":
                - 1
                - 3
                - 13
                - 16
                - 22
                - 23
                - 35
                - 55
            "4": 3.10.12
            "5": 0.19.1
            "8":
                - 3
                - 5
            "12": 0.19.1
            "13": windows-amd64
action_noise:
    value: None
action_space:
    value: Discrete(7)
algo:
    value: PPO
algorithm:
    value: PPO
batch_size:
    value: 64
clip_range:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x0000020A0A23ACB0>
clip_range_vf:
    value: None
device:
    value: cuda
ent_coef:
    value: 0
env:
    value: <stable_baselines3.common.vec_env.vec_transpose.VecTransposeImage object at 0x0000020909D44340>
ep_info_buffer:
    value: deque([], maxlen=100)
ep_success_buffer:
    value: deque([], maxlen=100)
gae_lambda:
    value: 0.95
gamma:
    value: 0.99
learning_rate:
    value: 0.0003
lr_schedule:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x0000020909D265F0>
max_grad_norm:
    value: 0.5
max_steps:
    value: 100
n_envs:
    value: 1
n_epochs:
    value: 10
n_steps:
    value: 2048
normalize_advantage:
    value: "True"
num_timesteps:
    value: 0
observation_space:
    value: 'Dict(''image'': Box(0, 255, (3, 7, 7), uint8))'
policy:
    value: |-
        MultiInputActorCriticPolicy(
          (features_extractor): ObjEnvExtractor(
            (extractors): ModuleDict(
              (image): Sequential(
                (0): Conv2d(3, 16, kernel_size=(2, 2), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
                (3): ReLU()
                (4): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
                (5): ReLU()
                (6): Flatten(start_dim=1, end_dim=-1)
                (7): Linear(in_features=1024, out_features=64, bias=True)
                (8): ReLU()
              )
            )
          )
          (pi_features_extractor): ObjEnvExtractor(
            (extractors): ModuleDict(
              (image): Sequential(
                (0): Conv2d(3, 16, kernel_size=(2, 2), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
                (3): ReLU()
                (4): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
                (5): ReLU()
                (6): Flatten(start_dim=1, end_dim=-1)
                (7): Linear(in_features=1024, out_features=64, bias=True)
                (8): ReLU()
              )
            )
          )
          (vf_features_extractor): ObjEnvExtractor(
            (extractors): ModuleDict(
              (image): Sequential(
                (0): Conv2d(3, 16, kernel_size=(2, 2), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
                (3): ReLU()
                (4): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
                (5): ReLU()
                (6): Flatten(start_dim=1, end_dim=-1)
                (7): Linear(in_features=1024, out_features=64, bias=True)
                (8): ReLU()
              )
            )
          )
          (mlp_extractor): MlpExtractor(
            (policy_net): Sequential(
              (0): Linear(in_features=64, out_features=64, bias=True)
              (1): Tanh()
              (2): Linear(in_features=64, out_features=64, bias=True)
              (3): Tanh()
            )
            (value_net): Sequential(
              (0): Linear(in_features=64, out_features=64, bias=True)
              (1): Tanh()
              (2): Linear(in_features=64, out_features=64, bias=True)
              (3): Tanh()
            )
          )
          (action_net): Linear(in_features=64, out_features=7, bias=True)
          (value_net): Linear(in_features=64, out_features=1, bias=True)
        )
policy_class:
    value: <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>
policy_kwargs:
    value: '{''features_extractor_class'': <class ''__main__.ObjEnvExtractor''>}'
preference_vector:
    value:
        - 2
        - 2
        - 2
        - -3
        - 0.2
rollout_buffer:
    value: <stable_baselines3.common.buffers.DictRolloutBuffer object at 0x0000020909D44370>
rollout_buffer_class:
    value: <class 'stable_baselines3.common.buffers.DictRolloutBuffer'>
rollout_buffer_kwargs:
    value: '{}'
sde_sample_freq:
    value: -1
seed:
    value: None
start_time:
    value: 1735556591037695000
target_kl:
    value: None
tensorboard_log:
    value: ./logs/ppo/minigrid_custom_tensorboard/
use_sde:
    value: "False"
verbose:
    value: 1
vf_coef:
    value: 0.5
